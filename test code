 Selenium Code for Test Cases in Python

 from selenium import webdriver
 from selenium.webdriver.common.by import By
 from selenium.webdriver.common.keys import Keys
 import time
 # Set up the driver (assuming you're using Chrome)
 driver = webdriver.Chrome()
 # Define test data
 base_url = "https://bstackdemo.com/"
 test_email = "testuser@example.com"
 test_password = "Password123"
 product_name = "iPhone 12"
 # Test Case 1: User Login
def test_login():
 driver.get(base_url)
 driver.find_element(By.ID, "signin").click()
 # Fill login form
 driver.find_element(By.ID, "username").send_keys(test_email)
 driver.find_element(By.ID, "password").send_keys(test_password)
 driver.find_element(By.ID, "login").click()
 time.sleep(2)
 # Verify login by checking the user dashboard URL
 assert "dashboard" in driver.current_url
 print("Test Case 1: User Login - Passed")
 # Test Case 2: Add Product to Cart
 def test_add_to_cart():
 driver.get(base_url)
 # Search for a product (if search bar exists)
 search_box = driver.find_element(By.ID, "search")
 search_box.send_keys(product_name)
 search_box.send_keys(Keys.RETURN)
time.sleep(2)
 # Click "Add to Cart" button
 driver.find_element(By.ID, "add-to-cart").click()
 time.sleep(2)
 # Verify product added to cart by checking the cart contents
 driver.find_element(By.ID, "cart").click()
 assert product_name in driver.page_source
 print("Test Case 2: Add Product to Cart - Passed")
 # Test Case 3: Product Search Functionality
 def test_product_search():
 driver.get(base_url)
 # Search for a product
 search_box = driver.find_element(By.ID, "search")
 search_box.send_keys(product_name)
 search_box.send_keys(Keys.RETURN)
 time.sleep(2)
 # Verify search results
assert product_name in driver.page_source
 print("Test Case 3: Product Search Functionality - Passed")
 # Test Case 4: Checkout Process
 def test_checkout():
 driver.get(base_url)
 # Assume the product is already added to the cart
 driver.find_element(By.ID, "cart").click()
 driver.find_element(By.ID, "checkout").click()
 # Fill shipping details
 driver.find_element(By.ID, "shipping-address").send_keys("123 Test St, City, Country")
 driver.find_element(By.ID, "billing-address").send_keys("123 Test St, City, Country")
 # Proceed to payment
 driver.find_element(By.ID, "proceed-to-payment").click()
 time.sleep(2)
 # Verify checkout success
 assert "Order Confirmation" in driver.page_source
 print("Test Case 4: Checkout Process - Passed")
# Test Case 5: Payment Gateway Integration
 def test_payment():
 driver.get(base_url)
 # Navigate to the checkout page with items in the cart
 driver.find_element(By.ID, "cart").click()
 driver.find_element(By.ID, "checkout").click()
 # Select a payment method
 driver.find_element(By.ID, "payment-method").click()
 # Fill payment details
 driver.find_element(By.ID, "credit-card-number").send_keys("4111111111111111")
 driver.find_element(By.ID, "expiration-date").send_keys("12/25")
 driver.find_element(By.ID, "cvv").send_keys("123")
 # Confirm payment
 driver.find_element(By.ID, "confirm-payment").click()
 time.sleep(2)
 # Verify payment success
 assert "Payment Successful" in driver.page_source
 print("Test Case 5: Payment Gateway Integration - Passed")
# Execute tests
 if __name__ == "__main__":
 test_login()
 test_add_to_cart()
 test_product_search()
 test_checkout()
 test_payment()
 # Close the browser after testing
 driver.quit()
